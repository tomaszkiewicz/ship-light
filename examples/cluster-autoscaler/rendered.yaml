---
# Source: cluster-autoscaler/templates/secret.yaml

apiVersion: v1
kind: Secret
metadata:
  name: cluster-autoscaler-aws-cluster-autoscaler
data:
  AwsAccessKeyId: ""
  AwsSecretAccessKey: ""

---
# Source: cluster-autoscaler/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
---
# Source: cluster-autoscaler/templates/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - endpoints
    verbs:
      - create
      - patch
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints
    resourceNames:
      - cluster-autoscaler
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
    - watch
    - list
    - get
    - update
  - apiGroups:
    - ""
    resources:
      - pods
      - services
      - replicationcontrollers
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - watch
      - list
      - get
  - apiGroups:
    - batch
    resources:
      - jobs
      - cronjobs
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - extensions
    resources:
      - replicasets
      - daemonsets
    verbs:
      - watch
      - list
      - get
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - watch
      - list
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - replicasets
    - statefulsets
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - watch
    - list
    - get
---
# Source: cluster-autoscaler/templates/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-autoscaler-aws-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-aws-cluster-autoscaler
    namespace: cluster-autoscaler
---
# Source: cluster-autoscaler/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - cluster-autoscaler-status
    verbs:
      - delete
      - get
      - update
---
# Source: cluster-autoscaler/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cluster-autoscaler-aws-cluster-autoscaler
subjects:
  - kind: ServiceAccount
    name: cluster-autoscaler-aws-cluster-autoscaler
    namespace: cluster-autoscaler
---
# Source: cluster-autoscaler/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  ports:
    - port: 8085
      protocol: TCP
      targetPort: 8085
      name: http
  selector:
    app: aws-cluster-autoscaler
    release: cluster-autoscaler
  type: "ClusterIP"

---
# Source: cluster-autoscaler/templates/deployment.yaml


apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aws-cluster-autoscaler
      release: cluster-autoscaler
  template:
    metadata:
      annotations:
        iam.amazonaws.com/role: k8s-cluster-autoscaler
        
      labels:
        app: aws-cluster-autoscaler
        release: cluster-autoscaler
    spec:
      containers:
        - name: aws-cluster-autoscaler
          image: "k8s.gcr.io/cluster-autoscaler:v1.13.1"
          imagePullPolicy: "IfNotPresent"
          command:
            - ./cluster-autoscaler
            - --cloud-provider=aws
            - --namespace=cluster-autoscaler
            - --node-group-auto-discovery=asg:tag=k8s.io/cluster-autoscaler/enabled,kubernetes.io/cluster/$CLUSTER_NAME
            - --logtostderr=true
            - --stderrthreshold=info
            - --v=4

          env:
            - name: AWS_REGION
              value: "eu-west-1"
          livenessProbe:
            httpGet:
              path: /health-check
              port: 8085
          ports:
            - containerPort: 8085
          resources:
            limits:
              memory: 300Mi
            requests:
              memory: 300Mi
            
          volumeMounts:
            - name: ssl-certs
              mountPath: /etc/ssl/certs/ca-certificates.crt
              readOnly: true
      serviceAccountName: cluster-autoscaler-aws-cluster-autoscaler
      tolerations:
        []
        
      volumes:
        - name: ssl-certs
          hostPath:
            path: /etc/ssl/certs/ca-bundle.crt

---
# Source: cluster-autoscaler/templates/pdb.yaml
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  labels:
    app: aws-cluster-autoscaler

    release: cluster-autoscaler
  name: cluster-autoscaler-aws-cluster-autoscaler
spec:
  selector:
    matchLabels:
      app: aws-cluster-autoscaler
      release: cluster-autoscaler
  maxUnavailable: 1
  # minAvailable: 2
  
---
# Source: cluster-autoscaler/templates/servicemonitor.yaml

apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: cluster-autoscaler-aws-cluster-autoscaler
  namespace: monitoring
  labels:
      prometheus: "kubernetes-k8s"
spec:
  selector:
    matchLabels:
      app: aws-cluster-autoscaler
      release: cluster-autoscaler
  endpoints:
  - port: http
    interval: 10s
  namespaceSelector:
    any: true
 

---
# Source: cluster-autoscaler/templates/podsecuritypolicy.yaml


