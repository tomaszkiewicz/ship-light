---
# Source: dex/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app: dex

    release: "dex"
  name: dex
data:
  config.yaml: Y29ubmVjdG9yczogbnVsbAplbmFibGVQYXNzd29yZERCOiB0cnVlCmdycGM6CiAgYWRkcjogMC4wLjAuMDo1MDAwCiAgdGxzQ2VydDogL2V0Yy9kZXgvdGxzL2dycGMvc2VydmVyL3Rscy5jcnQKICB0bHNDbGllbnRDQTogL2V0Yy9kZXgvdGxzL2dycGMvY2EvdGxzLmNydAogIHRsc0tleTogL2V0Yy9kZXgvdGxzL2dycGMvc2VydmVyL3Rscy5rZXkKaXNzdWVyOiBodHRwOi8vZGV4LmlvOjgwODAKbG9nZ2VyOgogIGxldmVsOiBkZWJ1ZwpvYXV0aDI6CiAgc2tpcEFwcHJvdmFsU2NyZWVuOiB0cnVlCnN0b3JhZ2U6CiAgY29uZmlnOgogICAgaW5DbHVzdGVyOiB0cnVlCiAgdHlwZToga3ViZXJuZXRlcwp3ZWI6CiAgaHR0cDogMC4wLjAuMDo4MDgwCg==

---
# Source: dex/templates/serviceaccount.yaml

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex

    release: "dex"
  name: dex
---
# Source: dex/templates/clusterrole.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: dex

    release: "dex"
  name: dex
rules:
- apiGroups: ["dex.coreos.com"] # API group created by dex
  resources: ["*"]
  verbs: ["*"]
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["create"] # To manage its own resources, dex must be able to create customresourcedefinitions
---
# Source: dex/templates/clusterrolebinding.yaml

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: dex

    release: "dex"
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
  - kind: ServiceAccount
    name: dex
    namespace: dex
---
# Source: dex/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: dex
  labels:
    app: dex

    release: dex
spec:
  type: ClusterIP
  sessionAffinity: None
  ports:
  - name: http 
    port: 8080
    targetPort: 8080
  - name: grpc 
    port: 5000
    targetPort: 5000
  selector:
    app: dex
    release: "dex"

---
# Source: dex/templates/deployment.yaml








apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: dex
  labels:
    app: dex

    release: "dex"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: dex
      release: "dex"
  template:
    metadata:
      labels:
        app: dex
        release: "dex"
      annotations:
        checksum/config: 91b7f127c5d9148eb0893cc1388476ce7bab3487956bd6cfacea6fb13097108f
    spec:
      serviceAccountName: dex
      nodeSelector:
          {}
          
      containers:
      - name: main
        image: "quay.io/dexidp/dex:v2.16.0"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        resources:
          limits:
            memory: 50Mi
          requests:
            memory: 50Mi
          
        ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 5000
            name: grpc
            protocol: TCP
          
        env:
          []
          
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: config
        - mountPath: /etc/dex/tls/https/server
          name: https-tls
        - mountPath: /etc/dex/tls/grpc/server
          name: grpc-tls-server
        - mountPath: /etc/dex/tls/grpc/ca
          name: grpc-tls-ca
      volumes:
      - secret:
          defaultMode: 420
          items:
          - key: config.yaml
            path: config.yaml
          secretName: dex
        name: config
      - name: https-tls
        secret:
          defaultMode: 420
          secretName: "dex-web-server-tls"
      - name: grpc-tls-server
        secret:
          defaultMode: 420
          secretName: "dex-grpc-server-tls"
      - name: grpc-tls-ca
        secret:
          defaultMode: 420
          secretName: "dex-grpc-ca"


---
# Source: dex/templates/config-openssl.yaml


---
# Source: dex/templates/ingress.yaml


---
# Source: dex/templates/job-grpc-certs.yaml


---
# Source: dex/templates/job-web-certs.yaml


---
# Source: dex/templates/poddisruptionbudget.yaml

---
# Source: dex/templates/role.yaml

---
# Source: dex/templates/rolebinding.yaml

