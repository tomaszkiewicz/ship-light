#!/bin/bash

echo "ship-light"
echo ""

CWD=$(pwd)
echo "working directory: $CWD"

SHIP_REPO_CLONE_DIR=repo
SHIP_DEFAULT_BRANCH=master
SHIP_COMMIT_FILE="$CWD/.ship-commit"

eval $(cat ship-light.conf | grep SHIP_PATH)
SHIP_RELEASE_NAME=$(basename $SHIP_PATH)
SHIP_NAMESPACE=$(basename $SHIP_PATH)

echo "loaded settings:"
eval $(cat ship-light.conf)
set | grep SHIP

if [ ! -d $SHIP_REPO_CLONE_DIR ]; then
  echo "repo not clonned, cloning"
  git clone $SHIP_REPO $SHIP_REPO_CLONE_DIR
else
  echo "repo already cloned, updating"
  cd $SHIP_REPO_CLONE_DIR
  git fetch
  cd $CWD
fi

cd $SHIP_REPO_CLONE_DIR

if [ -e "$SHIP_COMMIT_FILE" ]; then
  echo "checking out proper commit"
  git checkout $(cat $SHIP_COMMIT_FILE)
else
  git pull origin $SHIP_DEFAULT_BRANCH

  echo "saving commit id"
  git log --format="%H" -n 1 > $SHIP_COMMIT_FILE
fi

cd $CWD

# TODO only if subdirectory of current repo
if [ ! -f .gitignore ]; then
  echo "repo" > .gitignore
fi

if [ ! -f values.yaml ]; then
  echo "values.yaml not found, cloning default values"
  cp repo/$SHIP_PATH/values.yaml .
fi

if [ ! -f kustomization.yaml ]; then
  echo "kustomization.yaml not found, creating default one"
  kubectl create ns $SHIP_NAMESPACE --dry-run -o yaml | grep -v creationTimestamp > namespace.yaml
  touch rendered.yaml
  echo "namespace: $SHIP_NAMESPACE" > kustomization.yaml
  echo "" >> kustomization.yaml
  kustomize edit add resource rendered.yaml
  kustomize edit add resource namespace.yaml
fi

echo "building dependencies"
helm dependencies build $SHIP_REPO_CLONE_DIR/$SHIP_PATH

if [ -x ship-light-prerender.sh ]; then
  echo "executing prerender script"
  ./ship-light-prerender.sh
fi

echo "rendering template"
helm template -f values.yaml --name $SHIP_RELEASE_NAME --namespace $SHIP_NAMESPACE $SHIP_REPO_CLONE_DIR/$SHIP_PATH | \
  sed 's/RELEASE-NAME-//' | \
  sed 's/RELEASE-NAME//' | \
  sed 's/release: ""//' | \
  sed 's/release: null//' | \
  sed 's/release:$//' | \
  sed 's/.*chart:.*$//' | \
  grep -v Tiller > rendered.yaml

echo "all done"
